SERC 358 OFFICE HOURS
Q:
Queueing CPU arrivals in event queue vs sending directly to core after system arrival event
Disk IO in background or foreground
processor status?
Stat clarifications

SEED
INIT_TIME
FIN_TIME
ARRIVE_MIN
ARRIVE_MAX
QUIT_PROB
CPU_MIN
CPU_MAX
DISK_MIN
DISK_MAX
DISK2_MIN
DISK2_MAX

Must handle:
PROCESS_ARRIVAL
PROCESS_ARRIVE_CPU
PROCESS_FINISH_CPU
PROCESS_ARRIVE_DISK1
PROCESS_ARRIVE_DISK2
PROCESS_FINISH_DISK1
PROCESS_FINISH_DISK2
SIMULATION_FINISH


Handling process_arrival:
if cpu is occupied or queue is non-empty:
	put process on CPU queue
else:
	event time=  current system time
	set cpu to occupied

PROCESS_ARRIVE_CPU
event time = current system time + random interval between CPU_MIN and CPU_MAX

PROCESS_FINISH_CPU
Determine if process will exit system based on QUIT_PROB

PROCESS_ARRIVE_DISK:
create PROCESS_FINISH_DISK
event time = current system time + random interval between ARRIVE_MIN and ARRIVE_MAX

PROCESS_FINISH_DISK:
Process cannot exit system
If CPU is occupied put process on queue
	add process to queue
	set CPU to occupied

Finish writing log to file
write final stats to STAT file
close all file handle
Free any allocated memory

Must log every event:
Event time,
PID,
Event description,

STAT File:
Must contain queue average and max sizes
Amount of time spent at a given component
Throughput:
	Number of jobs handled by each component

RUNS File:
Run program 
Include Config values
What you learned from that particular run


